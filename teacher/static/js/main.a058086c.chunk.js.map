{"version":3,"sources":["redux/reducers/nav.js","redux/reducers/blog.js","redux/createStore.js","store.js","serviceWorker.js","components/Nav/NavItem.jsx","containers/Nav/Links.jsx","components/Nav/Brand.jsx","containers/Nav/NavBar.jsx","components/HomePage/HomePage.jsx","containers/BlogFather/ListItem.jsx","components/BlogFather/List.jsx","components/BlogFather/BlogFather.jsx","components/Blog/Blog.jsx","routes/index.jsx","index.js"],"names":["initialState","to","exact","name","nav","state","arguments","length","undefined","type","id","likes","blog","createStore","history","combineReducers","router","connectRouter","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","Boolean","window","location","hostname","match","NavigationLink","_ref","other","Object","objectWithoutProperties","react_default","a","createElement","NavItem","NavLink","assign","className","activeClassName","children","Links","isOpen","links","Collapse","navbar","map","val","i","key","Brand","toggle","NavbarBrand","style","color","NavbarToggler","onClick","NavigationBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","Container","Navbar","light","expand","Component","withRouter","connect","ownProps","HomePage","ListItem","Link","Badge","pill","List","stories","ListGroup","containers_BlogFather_ListItem","BlogFather","BlogFather_List","Blog","params","Row","Col","routes","Fragment","Nav_NavBar","Switch","Route","path","component","store","createRootReducer","render","es","esm","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a058086c.chunk.js","sourcesContent":["const initialState = [\r\n    { to: '/', exact: true, name: 'Главная' }, \r\n    { to: '/contest', exact: true, name: 'Конкурс' }, \r\n    { to: '/works', name: 'Мои работы' }, \r\n    { to: '/discussions', name: 'Обсуждение' }, \r\n    { to: '/exam', name: 'ЕГЭ и ОГЭ' }, \r\n    { to: '/blog', name: 'Блог' }\r\n]\r\n\r\n\r\nexport const nav = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ACTION_TYPE':\r\n            return \r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = [\r\n    {\r\n        name: 'Улыбка',\r\n        id: 1,\r\n        likes: 12312312\r\n    }, {\r\n        name: 'Улыбка',\r\n        id: 2,\r\n        likes: 6\r\n    }, {\r\n        name: 'Улыбка',\r\n        id: 3,\r\n        likes: 9\r\n    }, {\r\n        name: 'Улыбка',\r\n        id: 4,\r\n        likes: 154\r\n    }, {\r\n        name: 'Улыбка',\r\n        id: 5,\r\n        likes: 8921\r\n    }, {\r\n        name: 'Улыбка',\r\n        id: ''\r\n    }, {\r\n        name: 'Улыбка',\r\n        id: 7\r\n    },\r\n]\r\n\r\n\r\nexport const blog = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ACTION_TYPE':\r\n            return \r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport { nav } from './reducers/nav'\r\nimport { blog } from './reducers/blog'\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    nav,\r\n    blog\r\n})","import {createStore, applyMiddleware, compose} from 'redux'\r\nimport {routerMiddleware} from 'connected-react-router'\r\nimport thunk from 'redux-thunk'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport createRootReducer  from './redux/createStore'\r\n\r\nexport const history = createHistory()\r\n\r\nconst initialState = {}\r\nconst enhancers = []\r\nconst middleware = [thunk, routerMiddleware(history)]\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\r\n\r\n    if (typeof devToolsExtension === 'function') {\r\n        enhancers.push(devToolsExtension())\r\n    }\r\n}\r\n\r\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers)\r\n\r\nexport default function configureStore() {\r\n    const store = createStore(createRootReducer(history), initialState, composedEnhancers)\r\n    return store\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport { NavItem } from 'reactstrap'\r\nimport { NavLink  } from 'react-router-dom' \r\nimport './NavItem.css'\r\n\r\nexport function NavigationLink({ to, exact, name, ...other }) {\r\n    return <NavItem >\r\n            <NavLink\r\n            to={to}\r\n            className=\"nav-link link\"// font_2\"\r\n            activeClassName='activee'\r\n            exact={exact}\r\n            {...other}>\r\n            \r\n            {other.children ? other.children : name}\r\n        </NavLink>\r\n        </NavItem>\r\n}","import React from 'react'\r\nimport { Collapse } from 'reactstrap' \r\nimport { NavigationLink } from '../../components/Nav/NavItem';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Links({isOpen, links}) {\r\n    return <Collapse isOpen={isOpen} navbar className='justify-content-center order-2'>\r\n        <ul className='navbar-nav' >\r\n            {links && links.map((val, i) => <NavigationLink exact={ val.exact ? val.exact : false } to={val.to} key={i}>{val.name}</NavigationLink>)}\r\n        </ul>\r\n    </Collapse>\r\n}\r\nLinks.propTypes={\r\n    isOpen: PropTypes.bool.isRequired,\r\n    links: PropTypes.arrayOf(PropTypes.shape({\r\n        exact:PropTypes.bool,\r\n        to:PropTypes.string.isRequired,\r\n        name:PropTypes.string.isRequired\r\n    }).isRequired)\r\n}","import React from 'react'\r\nimport { NavbarBrand, NavbarToggler } from 'reactstrap'\r\n\r\nexport default function Brand({toggle}) {\r\n    return <div className=\"d-flex  order-0\">\r\n        <NavbarBrand style={{ color:'#F25A29'}}>Н.А.Ш.</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n    </div>\r\n}","import React, { Component } from 'react'\r\nimport { Navbar, Container} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom' \r\nimport Links from './Links';\r\nimport Brand from '../../components/Nav/Brand';\r\nimport './NavBar.css'\r\n\r\nclass NavigationBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isOpen: false\r\n        }\r\n    }\r\n    toggle = () => {\r\n        this.setState({isOpen: !this.state.isOpen})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='bg-navbar'>\r\n                <Container >\r\n                    <Navbar light expand=\"md\" className=''> \r\n                        <Brand toggle={this.toggle}/>\r\n                        <Links links={this.props.links&& this.props.links} isOpen={this.state.isOpen}/>               \r\n                    </Navbar>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    links: state.nav\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps)(NavigationBar))","import React, { Component } from 'react'\r\n\r\nexport default class HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Hello from <h1>Home Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Badge } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './ListItem.css'\r\n\r\nconst ListItem = ({ name, id, likes }) => (\r\n    <Link className={id ? \"list-group-item list-item\" :'disabled list-group-item list-item'} to={id ? `/blog/${id}` : '/blog/'}>\r\n            {name}\r\n            {' '}\r\n            {likes && <Badge pill >{likes}</Badge>}\r\n        </Link>\r\n)\r\n\r\nListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    likes: PropTypes.number,\r\n}\r\nexport default ListItem\r\n","import React, { Component } from 'react'\r\nimport { ListGroup } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\n\r\nimport ListItem from '../../containers/BlogFather/ListItem';\r\n\r\nclass List extends Component {\r\n    render() {\r\n        const {stories} = this.props\r\n        return (\r\n            <ListGroup>\r\n                {stories && stories.map((val, i) => <ListItem key={i} id={val.id} name={val.name} likes={val.likes}/>)}\r\n            </ListGroup>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    stories: state.blog\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(List)   ","import React, { Component } from 'react'\r\nimport {Container} from 'reactstrap'\r\nimport List from './List';\r\n\r\nexport default class BlogFather extends Component {\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-5\">\r\n                <h4 className=\"text-center\" style={{ color: '#4E706F'}}>В своём блоге я обычно делюсь смешными моментами с уроков.\r\n                    Предлагаю с некоторымы из них познакомиться, выбирайте.</h4>\r\n                <Container>\r\n                    <List/>\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Container, Col, Row } from 'reactstrap'\r\n\r\nclass Blog extends Component {\r\n    render() {\r\n        const {params} = this.props.match\r\n        \r\n        return (\r\n                <Container>\r\n\r\n                    <Row className=\"text-center mt-5\">\r\n                        <Col></Col>\r\n                        <Col>{params.id}</Col>\r\n                        <Col>{++params.id}</Col>\r\n                    </Row>\r\n                </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null)(Blog)","import React from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport NavigationBar from '../containers/Nav/NavBar';\r\n// import FetchState from '../hoc/FetchData/FetchState.jsx';\r\nimport HomePage from '../components/HomePage/HomePage.jsx';\r\nimport BlogFather from '../components/BlogFather/BlogFather';\r\nimport Blog from '../components/Blog/Blog';\r\n// import Footer from '../containers/Footer/Footer';\r\n\r\nconst routes = (\r\n    <React.Fragment>\r\n        {/* <FetchState> */}\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"wrap\">\r\n                    <NavigationBar />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={HomePage} />\r\n                        <Route path='/blog' exact component={BlogFather}/>\r\n                        <Route path='/blog/:id' component={Blog}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n            <div className=\"page-footer\">\r\n                <div>ДА да дая</div>\r\n            </div>\r\n        {/* </FetchState> */}\r\n    </React.Fragment>\r\n)\r\n\r\nexport default routes","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport configureStore, { history } from './store'\nimport * as serviceWorker from './serviceWorker';\nimport routes from './routes/index';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css'\n\nconst store = configureStore();\nrender(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            {routes}\n        </ConnectedRouter>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls. Learn\n// more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}