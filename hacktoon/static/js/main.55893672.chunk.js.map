{"version":3,"sources":["config/index.js","Container/Nav.js","Container/LK.js","Components/Login.jsx","Components/Zavodi.jsx","Components/MapHere.jsx","App.js","serviceWorker.js","index.js"],"names":["Config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Div","styled","div","Navigation","style","zIndex","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","textDecoration","href","onClick","firebase","auth","signOut","LK","Form","form","withRouter","props","useState","login","updateLogin","password","updatePassword","htmlFor","placeholder","value","onChange","e","target","required","autoFocus","preventDefault","signInWithEmailAndPassword","then","v","console","log","history","push","catch","er","error","code","window","confirm","createUserWithEmailAndPassword","alert","message","signInAnonymously","degrees_to_radians","degrees","Math","PI","Zavodi","map","myCoord","fetch","json","withOutName","filter","Boolean","lat","long","mylon","mylat","coords","dist","lon1","abs","cos","lon2","lat1","lat2","myFilter","forEach","i","lng","marker","H","Marker","addObject","setCenter","MapHere","cords","setCoord","myRef","React","createRef","undefined","setMap","useEffect","maptypes","service","Platform","createDefaultLayers","mape","Map","current","raster","terrain","base","zoom","center","ui","UI","createDefault","mapevents","Behavior","MapEvents","Promise","res","reject","navigator","geolocation","getCurrentPosition","cor","latitude","longitude","height","width","position","top","left","backgroundColor","ref","PrivateRoute","Component","rest","render","isSignedIn","providerId","user","pathname","state","from","location","App","config","Nav","exact","path","component","paddingTop","Login","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55893672.chunk.js","sourcesContent":["const Config = {\r\n  apiKey: \"AIzaSyCLiM3ZkfuiUia4wX8dWJnavwfKH_CNmM4\",\r\n  authDomain: \"bitbothacktoon.firebaseapp.com\",\r\n  databaseURL: \"https://bitbothacktoon.firebaseio.com\",\r\n  projectId: \"bitbothacktoon\",\r\n  storageBucket: \"bitbothacktoon.appspot.com\",\r\n  messagingSenderId: \"307996974626\",\r\n  appId: \"1:307996974626:web:772aa58bfd2ceb711ef47b\",\r\n  measurementId: \"G-2WC4X31F2S\"\r\n};\r\n\r\nexport default Config","import React from 'react'\r\nimport { NavLink, Link }from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { IfFirebaseAuthed } from '@react-firebase/auth';\r\nimport firebase from \"firebase/app\";\r\n\r\nconst Div = styled.div`\r\n`\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Div style={{zIndex:'1000'}}>\r\n<nav className=\"navbar navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/\">Мусорка</Link>\r\n      <button className=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample01\" aria-controls=\"navbarsExample01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"navbar-collapse collapse\" id=\"navbarsExample01\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <IfFirebaseAuthed>\r\n            <NavLink to=\"/lk\" activeClassName=\"active\" className=\"nav-item\" style={{textDecoration:'none'}} >\r\n              <a className=\"nav-link\">Личный кабинет <span className=\"sr-only\">(current)</span></a>\r\n            </NavLink>\r\n          </IfFirebaseAuthed>\r\n          \r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/map\">Карта</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n          </li>\r\n          <IfFirebaseAuthed>\r\n            <li className=\"nav-item\" style={{textDecoration:'none'}}  onClick={()=> firebase.auth().signOut()}>\r\n              <a className=\"nav-link\" href=\"#\">Выйти<span className=\"sr-only\">(exit)</span></a>\r\n            </li>\r\n          </IfFirebaseAuthed>\r\n        </ul>\r\n\r\n      </div>\r\n    </nav>\r\n    </Div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default Navigation\r\n\r\n","import React from 'react'\r\n\r\nconst LK = () => {\r\n  return <div>ДАДАадада</div>\r\n}\r\n\r\nexport default LK","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport \"firebase/auth\";\r\nimport firebase from \"firebase/app\";\r\n\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    max-width: 330px;\r\n    padding: 15px;\r\n    margin: 0 auto;\r\n`\r\n\r\n\r\nconst Login = (props) => {\r\n  const [login, updateLogin] = useState('')\r\n  const [password, updatePassword] = useState('')\r\n\r\n\r\n  const LoginEmail = (e) =>{\r\n    e.preventDefault()\r\n    \r\n    firebase.auth().signInWithEmailAndPassword(login, password).then((v)=> {console.log(v);props.history.push('/lk')})\r\n    .catch((er)=>{\r\n      console.error(er);\r\n      if (er.code === \"auth/user-not-found\") {\r\n        const ans = window.confirm('Пользователь с таким логином не найден, хотите зарегестрироваться?')\r\n        if (ans) {\r\n          firebase.auth().createUserWithEmailAndPassword(login, password).then((v) => { console.log(v); props.history.push('/lk') }).catch((er) => { console.error(er); alert(er.message) })\r\n        }else{\r\n          const ans2 = window.confirm(\"Зайти анонимно?\")\r\n          if (ans2)\r\n            firebase.auth().signInAnonymously().then((v) => { console.log(v); props.history.push('/lk') }).catch((er) => { console.error(er); alert(er.message) })\r\n        }\r\n      }else{\r\n        alert(er.message)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form className=\"text-center\" >\r\n\r\n      <h1 className=\"h3 mb-3 font-weight-normal\">Пожалуйста, авторизуйтесь</h1>\r\n      <label htmlFor=\"inputEmail\" className=\"sr-only\">Почта</label>\r\n      <input type=\"email\" id=\"inputEmail\" className=\"form-control\" placeholder=\"Email address\" value={login} onChange={(e)=> updateLogin(e.target.value)} required=\"\" autoFocus=\"\"/>\r\n      <label htmlFor=\"inputPassword\" className=\"sr-only mt-s-2\">Пароль</label>\r\n      <input type=\"password\" id=\"inputPassword\" className=\"form-control mt-2\" value={password} onChange={(e) => updatePassword(e.target.value)} placeholder=\"Password\" required=\"\"/>\r\n      <button onClick={LoginEmail} className=\"btn btn-lg btn-primary btn-block mt-3\" type=\"submit\">Войти</button>\r\n\r\n      <p className=\"mt-5 mb-3 text-muted\">© 2019</p>\r\n    </Form>\r\n    )\r\n}\r\n\r\nexport default withRouter(Login)","import React from 'react'\r\nimport firebase from 'firebase'\r\nimport { FirebaseDatabaseNode } from \"@react-firebase/database\";\r\n\r\nfunction myFilter(mylon = 51.5289156201, mylat = 46.0209384922,coords, dist=20) {\r\n  const lon1 = mylon - dist / Math.abs(Math.cos(degrees_to_radians(mylat)) * 111.0),// # 1 градус широты = 111 км\r\n  lon2 = mylon + dist / Math.abs(Math.cos(degrees_to_radians(mylat)) * 111.0),//\r\n  lat1 = mylat - (dist / 111.0),\r\n  lat2 = mylat + (dist / 111.0)\r\n  return coords.filter(({ lat, long }) => (lat >= lat1 || lat <= lat2) && (long >= lon1 || long>=lon2))\r\n}\r\n\r\nfunction degrees_to_radians(degrees) {\r\n  var pi = Math.PI;\r\n  return degrees * (pi / 180);\r\n}\r\n\r\nconst icon = () => <div>da</div>\r\n\r\nconst Zavodi = ({ map, myCoord}) => {\r\n  console.log(myCoord);\r\n  \r\n  // console.log(map);\r\n  fetch('https://bitbothacktoon.firebaseio.com/zavodi.json').then(v=> v.json()).then((v)=>{\r\n  console.log(v);\r\n    const withOutName = v.filter(Boolean).map(({lat, long}) => ({lat, long}))\r\n    console.log(myFilter(myCoord[0], myCoord[1], withOutName,4000))\r\n\r\n  v.filter(Boolean).forEach((v,i) => {\r\n      \r\n\r\n       var coords = { lat: v.lat, lng: v.long },\r\n        // eslint-disable-next-line no-undef\r\n         marker = new H.map.Marker(coords);\r\n    if (map) {\r\n      // Set map center and zoom, add the marker to the map:\r\n      map.addObject(marker);\r\n      map.setCenter(coords)\r\n    }\r\n  })\r\n\r\n  })\r\n  return (\r\n    <div>da</div>\r\n          \r\n  )\r\n\r\n}\r\n\r\nexport default Zavodi","import React, { useEffect, useState } from 'react'\r\nimport Zavodi from './Zavodi';\r\n\r\n\r\nconst getCurrentPos = () => {\r\n  return new Promise((res, reject) => {\r\n    if (navigator.geolocation) {\r\n      console.log('Geolocation is supported!');\r\n\r\n      navigator.geolocation.getCurrentPosition(res);\r\n    }\r\n    else {\r\n      reject('Geolocation is not supported for this Browser/OS version yet.');\r\n    }\r\n  })\r\n}\r\n\r\n\r\nconst MapHere = (props) => {\r\n  const [enabledMap, setMapEnable] = useState(false)\r\n  const [cords, setCoord] = useState([0,0])\r\n  const myRef = React.createRef();\r\n  const [map, setMap] = useState(undefined)\r\n\r\n  // getCurrentPos().then((val)=>{\r\n  //   setCoords([val.coords.latitude, val.coords.longitude])\r\n  // }).catch(()=> alert('Используем обычные координаты'))\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line no-undef\r\n    var platform = new H.service.Platform({\r\n      'apikey': 'ESU6InU1lFzkpCHoS8_AuD7UUACCf1_x06z0GeEdWzs'\r\n    });\r\n\r\n    // Obtain the default map types from the platform object\r\n    var maptypes = platform.createDefaultLayers();\r\n\r\n    // Instantiate (and display) a map object:\r\n    // eslint-disable-next-line no-undef\r\n    var mape = new H.Map(\r\n      myRef.current,\r\n      maptypes.raster.terrain.base,\r\n      {\r\n        zoom: 10,\r\n        center: { lng: 13.4, lat: 52.51 }\r\n      });\r\n\r\n    // eslint-disable-next-line no-undef\r\n    var ui = H.ui.UI.createDefault(mape, maptypes);\r\n    // eslint-disable-next-line no-undef\r\n    var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(mape));\r\n    setMap(mape)\r\n    getCurrentPos().then(cor => setCoord([cor.coords.latitude, cor.coords.longitude]) ).catch((v)=> alert('Не удалось получить геопозицию'))\r\n\r\n\r\n  }, [myRef.current])\r\n\r\n\r\n  return (\r\n    <div id=\"list\">\r\n\r\n      <div id=\"map\" style={{\r\n        height: '100%',\r\n        width: '100%',\r\n        position: 'absolute',\r\n        top: '0px',\r\n        left: '0px',\r\n        backgroundColor: 'rgb(229, 227, 223)'\r\n      }} ref={myRef} {...props}>\r\n        <Zavodi map={map} myCoord={cords}/>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default MapHere","import React from \"react\";\nimport firebase from \"@firebase/app\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport \"@firebase/auth\";\nimport {\n  FirebaseAuthProvider,\n  FirebaseAuthConsumer,\n} from \"@react-firebase/auth\";\nimport config  from \"./config\";\n\n// import styled from 'styled-components'\n import Nav from './Container/Nav'\n// import Container from \"react-bootstrap/Container\"\nimport { Redirect } from 'react-router-dom'\n\n// firebase.auth().signInWithEmailAndPassword(email, password)\nimport './App.css'\nimport './Head.css'\n// import Main from \"./Container/Main\";\nimport LK from \"./Container/LK\";\nimport Login from \"./Components/Login\";\n// import Map from \"./Components/Map\";\nimport MapHere from \"./Components/MapHere\";\nimport { FirebaseDatabaseProvider } from \"@react-firebase/database\";\nconst PrivateRoute = ({ Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => \n        <FirebaseAuthConsumer>{\n          ({isSignedIn, providerId, user}) => {\n            if (isSignedIn){ \n              console.log('Авторизован');\n              \n              return<Component {...props} user={user} providerId={providerId} />\n            }else{\n              return <Redirect to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}/>\n            }\n          }}\n        </FirebaseAuthConsumer>\n      }\n    />\n  );\n}\n\n\nconst App = () => {\n  return (\n    <Router> \n      <FirebaseAuthProvider firebase={firebase} {...config}>\n        <FirebaseDatabaseProvider firebase={firebase} {...config}>\n        <div id=\"head\">\n        <Nav/>\n        </div>\n\n        <PrivateRoute exact path=\"/lk\" Component={LK}/>\n        <Route path='/map' component={MapHere}/>\n        <div style={{paddingTop:'56px'}}>\n          <Route path='/login' component={Login}/>\n          <Route path='/' exact component={Login}/>\n\n        </div>\n          <div id=\"footer\">\n            <ul>\n              <li><a href=\"#\" className=\"show_about\">О проекте</a></li>\n            </ul>\n          </div>\n        {/* <Route   component={() => <div>404</div>}/> */}\n    </FirebaseDatabaseProvider>\n      </FirebaseAuthProvider>\n    </Router>\n  )\n\n\n}\n\nexport default App\n// export const App = () => {\n//   return (\n//     <FirebaseAuthProvider {...config} firebase={firebase}>\n//       <div>\n//         <button onClick={()=> {\n          \n          \n//         }}></button>\n//         <button\n//           onClick={() => {\n//             const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n            \n//             firebase.auth().signInWithPopup(googleAuthProvider);\n//           }}\n//         >\n//           Sign In with Google\n//         </button>\n//         <button\n//           data-testid=\"signin-anon\"\n//           onClick={() => {\n//             firebase.auth().signInAnonymously();\n//           }}\n//         >\n//           Sign In Anonymously\n//         </button>\n//         <button\n//           onClick={() => {\n//             firebase.auth().signOut();\n//           }}\n//         >\n//           Sign Out\n//         </button>\n\n//         <FirebaseAuthConsumer>\n//           {({ isSignedIn, user, providerId }) => {\n//             return (\n//               <pre style={{ height: 300, overflow: \"auto\" }}>\n//                 {JSON.stringify({ isSignedIn, user, providerId }, null, 2)}\n//               </pre>\n//             );\n//           }}\n//         </FirebaseAuthConsumer>\n//         <div>\n//           <IfFirebaseAuthed>\n//             {() => {\n//               return <div>You are authenticated</div>;\n//             }}\n//           </IfFirebaseAuthed>\n//           <IfFirebaseAuthedAnd\n//             filter={({ providerId }) => providerId !== \"anonymous\"}\n//           >\n//             {({ providerId }) => {\n//               return <div>You are authenticated with {providerId}</div>;\n//             }}\n//           </IfFirebaseAuthedAnd>\n//         </div>\n//       </div>\n//     </FirebaseAuthProvider>\n//   );\n// };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"@firebase/auth\";\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}